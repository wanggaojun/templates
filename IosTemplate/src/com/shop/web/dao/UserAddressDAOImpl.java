package com.shop.web.dao;

import com.shop.web.entity.UserAddress;
import com.shop.web.entity.UserAddressExample;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class UserAddressDAOImpl extends SqlMapClientDaoSupport implements UserAddressDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    public UserAddressDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    public void insert(UserAddress record) {
        getSqlMapClientTemplate().insert("user_address.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    public int updateByPrimaryKey(UserAddress record) {
        int rows = getSqlMapClientTemplate().update("user_address.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    public int updateByPrimaryKeySelective(UserAddress record) {
        int rows = getSqlMapClientTemplate().update("user_address.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    public List selectByExample(UserAddressExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("user_address.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    public List selectByExample(UserAddressExample example) {
        return selectByExample(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    public UserAddress selectByPrimaryKey(Integer id) {
        UserAddress key = new UserAddress();
        key.setId(id);
        UserAddress record = (UserAddress) getSqlMapClientTemplate().queryForObject("user_address.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    public int deleteByExample(UserAddressExample example) {
        int rows = getSqlMapClientTemplate().delete("user_address.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    public int deleteByPrimaryKey(Integer id) {
        UserAddress key = new UserAddress();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("user_address.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getIdExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getId_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_Id_NULL", "Y");
            } else {
                parms.put("AND_Id_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_Id_NOT_NULL", "Y");
            } else {
                parms.put("AND_Id_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_Id_EQUALS", "Y");
            } else {
                parms.put("AND_Id_EQUALS", "Y");
            }
            parms.put("id", example.getId());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_Id_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_Id_NOT_EQUALS", "Y");
            }
            parms.put("id", example.getId());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_Id_GT", "Y");
            } else {
                parms.put("AND_Id_GT", "Y");
            }
            parms.put("id", example.getId());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_Id_GE", "Y");
            } else {
                parms.put("AND_Id_GE", "Y");
            }
            parms.put("id", example.getId());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_Id_LT", "Y");
            } else {
                parms.put("AND_Id_LT", "Y");
            }
            parms.put("id", example.getId());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_Id_LE", "Y");
            } else {
                parms.put("AND_Id_LE", "Y");
            }
            parms.put("id", example.getId());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getuser_idExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getUserId_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_user_id_NULL", "Y");
            } else {
                parms.put("AND_user_id_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_user_id_NOT_NULL", "Y");
            } else {
                parms.put("AND_user_id_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_user_id_EQUALS", "Y");
            } else {
                parms.put("AND_user_id_EQUALS", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_user_id_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_user_id_NOT_EQUALS", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_user_id_GT", "Y");
            } else {
                parms.put("AND_user_id_GT", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_user_id_GE", "Y");
            } else {
                parms.put("AND_user_id_GE", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_user_id_LT", "Y");
            } else {
                parms.put("AND_user_id_LT", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_user_id_LE", "Y");
            } else {
                parms.put("AND_user_id_LE", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getprovinceExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getProvince_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_province_NULL", "Y");
            } else {
                parms.put("AND_province_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_province_NOT_NULL", "Y");
            } else {
                parms.put("AND_province_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_province_EQUALS", "Y");
            } else {
                parms.put("AND_province_EQUALS", "Y");
            }
            parms.put("province", example.getProvince());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_province_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_province_NOT_EQUALS", "Y");
            }
            parms.put("province", example.getProvince());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_province_GT", "Y");
            } else {
                parms.put("AND_province_GT", "Y");
            }
            parms.put("province", example.getProvince());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_province_GE", "Y");
            } else {
                parms.put("AND_province_GE", "Y");
            }
            parms.put("province", example.getProvince());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_province_LT", "Y");
            } else {
                parms.put("AND_province_LT", "Y");
            }
            parms.put("province", example.getProvince());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_province_LE", "Y");
            } else {
                parms.put("AND_province_LE", "Y");
            }
            parms.put("province", example.getProvince());
            break;
        case UserAddressExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_province_LIKE", "Y");
            } else {
                parms.put("AND_province_LIKE", "Y");
            }
            parms.put("province", example.getProvince());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getcityExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getCity_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_city_NULL", "Y");
            } else {
                parms.put("AND_city_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_city_NOT_NULL", "Y");
            } else {
                parms.put("AND_city_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_city_EQUALS", "Y");
            } else {
                parms.put("AND_city_EQUALS", "Y");
            }
            parms.put("city", example.getCity());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_city_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_city_NOT_EQUALS", "Y");
            }
            parms.put("city", example.getCity());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_city_GT", "Y");
            } else {
                parms.put("AND_city_GT", "Y");
            }
            parms.put("city", example.getCity());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_city_GE", "Y");
            } else {
                parms.put("AND_city_GE", "Y");
            }
            parms.put("city", example.getCity());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_city_LT", "Y");
            } else {
                parms.put("AND_city_LT", "Y");
            }
            parms.put("city", example.getCity());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_city_LE", "Y");
            } else {
                parms.put("AND_city_LE", "Y");
            }
            parms.put("city", example.getCity());
            break;
        case UserAddressExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_city_LIKE", "Y");
            } else {
                parms.put("AND_city_LIKE", "Y");
            }
            parms.put("city", example.getCity());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getcountryExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getCountry_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_NULL", "Y");
            } else {
                parms.put("AND_country_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_NOT_NULL", "Y");
            } else {
                parms.put("AND_country_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_EQUALS", "Y");
            } else {
                parms.put("AND_country_EQUALS", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_country_NOT_EQUALS", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_GT", "Y");
            } else {
                parms.put("AND_country_GT", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_GE", "Y");
            } else {
                parms.put("AND_country_GE", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_LT", "Y");
            } else {
                parms.put("AND_country_LT", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_LE", "Y");
            } else {
                parms.put("AND_country_LE", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case UserAddressExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_LIKE", "Y");
            } else {
                parms.put("AND_country_LIKE", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getaddrExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getAddr_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_addr_NULL", "Y");
            } else {
                parms.put("AND_addr_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_addr_NOT_NULL", "Y");
            } else {
                parms.put("AND_addr_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_addr_EQUALS", "Y");
            } else {
                parms.put("AND_addr_EQUALS", "Y");
            }
            parms.put("addr", example.getAddr());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_addr_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_addr_NOT_EQUALS", "Y");
            }
            parms.put("addr", example.getAddr());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_addr_GT", "Y");
            } else {
                parms.put("AND_addr_GT", "Y");
            }
            parms.put("addr", example.getAddr());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_addr_GE", "Y");
            } else {
                parms.put("AND_addr_GE", "Y");
            }
            parms.put("addr", example.getAddr());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_addr_LT", "Y");
            } else {
                parms.put("AND_addr_LT", "Y");
            }
            parms.put("addr", example.getAddr());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_addr_LE", "Y");
            } else {
                parms.put("AND_addr_LE", "Y");
            }
            parms.put("addr", example.getAddr());
            break;
        case UserAddressExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_addr_LIKE", "Y");
            } else {
                parms.put("AND_addr_LIKE", "Y");
            }
            parms.put("addr", example.getAddr());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map gettelphoneExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getTelphone_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_telphone_NULL", "Y");
            } else {
                parms.put("AND_telphone_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_telphone_NOT_NULL", "Y");
            } else {
                parms.put("AND_telphone_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_telphone_EQUALS", "Y");
            } else {
                parms.put("AND_telphone_EQUALS", "Y");
            }
            parms.put("telphone", example.getTelphone());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_telphone_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_telphone_NOT_EQUALS", "Y");
            }
            parms.put("telphone", example.getTelphone());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_telphone_GT", "Y");
            } else {
                parms.put("AND_telphone_GT", "Y");
            }
            parms.put("telphone", example.getTelphone());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_telphone_GE", "Y");
            } else {
                parms.put("AND_telphone_GE", "Y");
            }
            parms.put("telphone", example.getTelphone());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_telphone_LT", "Y");
            } else {
                parms.put("AND_telphone_LT", "Y");
            }
            parms.put("telphone", example.getTelphone());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_telphone_LE", "Y");
            } else {
                parms.put("AND_telphone_LE", "Y");
            }
            parms.put("telphone", example.getTelphone());
            break;
        case UserAddressExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_telphone_LIKE", "Y");
            } else {
                parms.put("AND_telphone_LIKE", "Y");
            }
            parms.put("telphone", example.getTelphone());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getemailExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getEmail_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_NULL", "Y");
            } else {
                parms.put("AND_email_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_NOT_NULL", "Y");
            } else {
                parms.put("AND_email_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_EQUALS", "Y");
            } else {
                parms.put("AND_email_EQUALS", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_email_NOT_EQUALS", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_GT", "Y");
            } else {
                parms.put("AND_email_GT", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_GE", "Y");
            } else {
                parms.put("AND_email_GE", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_LT", "Y");
            } else {
                parms.put("AND_email_LT", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_LE", "Y");
            } else {
                parms.put("AND_email_LE", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case UserAddressExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_LIKE", "Y");
            } else {
                parms.put("AND_email_LIKE", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getisdefaultExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getIsdefault_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isdefault_NULL", "Y");
            } else {
                parms.put("AND_isdefault_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isdefault_NOT_NULL", "Y");
            } else {
                parms.put("AND_isdefault_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isdefault_EQUALS", "Y");
            } else {
                parms.put("AND_isdefault_EQUALS", "Y");
            }
            parms.put("isdefault", example.getIsdefault());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isdefault_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_isdefault_NOT_EQUALS", "Y");
            }
            parms.put("isdefault", example.getIsdefault());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isdefault_GT", "Y");
            } else {
                parms.put("AND_isdefault_GT", "Y");
            }
            parms.put("isdefault", example.getIsdefault());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isdefault_GE", "Y");
            } else {
                parms.put("AND_isdefault_GE", "Y");
            }
            parms.put("isdefault", example.getIsdefault());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isdefault_LT", "Y");
            } else {
                parms.put("AND_isdefault_LT", "Y");
            }
            parms.put("isdefault", example.getIsdefault());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isdefault_LE", "Y");
            } else {
                parms.put("AND_isdefault_LE", "Y");
            }
            parms.put("isdefault", example.getIsdefault());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getisvalidExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        switch (example.getIsvalid_Indicator()) {
        case UserAddressExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isvalid_NULL", "Y");
            } else {
                parms.put("AND_isvalid_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isvalid_NOT_NULL", "Y");
            } else {
                parms.put("AND_isvalid_NOT_NULL", "Y");
            }
            break;
        case UserAddressExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isvalid_EQUALS", "Y");
            } else {
                parms.put("AND_isvalid_EQUALS", "Y");
            }
            parms.put("isvalid", example.getIsvalid());
            break;
        case UserAddressExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isvalid_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_isvalid_NOT_EQUALS", "Y");
            }
            parms.put("isvalid", example.getIsvalid());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isvalid_GT", "Y");
            } else {
                parms.put("AND_isvalid_GT", "Y");
            }
            parms.put("isvalid", example.getIsvalid());
            break;
        case UserAddressExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isvalid_GE", "Y");
            } else {
                parms.put("AND_isvalid_GE", "Y");
            }
            parms.put("isvalid", example.getIsvalid());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isvalid_LT", "Y");
            } else {
                parms.put("AND_isvalid_LT", "Y");
            }
            parms.put("isvalid", example.getIsvalid());
            break;
        case UserAddressExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isvalid_LE", "Y");
            } else {
                parms.put("AND_isvalid_LE", "Y");
            }
            parms.put("isvalid", example.getIsvalid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table user_address
     *
     * @abatorgenerated Thu Dec 29 12:26:31 CST 2011
     */
    private Map getExampleParms(UserAddressExample example) {
        Map parms = new HashMap();
        parms.putAll(getIdExampleParms(example));
        parms.putAll(getuser_idExampleParms(example));
        parms.putAll(getprovinceExampleParms(example));
        parms.putAll(getcityExampleParms(example));
        parms.putAll(getcountryExampleParms(example));
        parms.putAll(getaddrExampleParms(example));
        parms.putAll(gettelphoneExampleParms(example));
        parms.putAll(getemailExampleParms(example));
        parms.putAll(getisdefaultExampleParms(example));
        parms.putAll(getisvalidExampleParms(example));
        return parms;
    }
}